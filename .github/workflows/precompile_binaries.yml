on:
  push:
    branches: '*'

name: Precompile Binaries

jobs:
  Precompile:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      # Install Rust 1.88 toolchain
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.88.0
          override: true

      # Install aarch64-apple-ios target
      - name: Install aarch64-apple-ios target
        run: rustup target add aarch64-apple-ios

      # Create a rustc wrapper to log compiler invocations
      - name: Write rustc wrapper
        run: |
          cat << 'EOF' > "rust/log-rustc.sh"
          #!/usr/bin/env bash
          set -e

          BASE_PATH="$(pwd)"

          REAL_RUSTC="$1"
          shift

          echo "[RUSTC] $@" >> "$BASE_PATH/rust-logs.txt"

          exec "$REAL_RUSTC" "$@"
          EOF
          chmod +x rust/log-rustc.sh

      # Configure Cargo.toml optimizations
      - name: Configure Cargo.toml optimizations
        run: |
          mkdir -p rust/.cargo
          cat << 'EOF' >> rust/.cargo/config.toml
          [profile.release]
          opt-level = 'z'
          lto = true
          codegen-units = 1
          panic = 'abort'
          EOF

      # Xcode selection for macOS
      - name: Select Xcode 15.2
        run: sudo xcode-select -s /Applications/Xcode_15.2.app

      # Precompile for iOS (aarch64-apple-ios)
      - name: Precompile (iOS aarch64)
        working-directory: rust
        env:
          RUSTC_WRAPPER: "${{ github.workspace }}/rust/log-rustc.sh"
          RUSTFLAGS: >
            --remap-path-prefix=${{ github.workspace }}=/src
            --remap-path-prefix=/Users/runner=/src
            --remap-path-prefix=/Users/mac=/src
        run: |
          cargo build --release --target aarch64-apple-ios

      # Upload compiled binaries and logs
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: precompiled-artifacts
          path: |
            rust/rust-logs.txt
            rust/target/aarch64-apple-ios/release/*
